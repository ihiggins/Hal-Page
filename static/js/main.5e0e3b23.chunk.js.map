{"version":3,"sources":["halPic.PNG","controls.PNG","App.js","reportWebVitals.js","index.js"],"names":["App","className","onClick","alert","server","channel","width","height","src","pic","alt","href","control","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAAe,G,YAAA,IAA0B,oCCA1B,MAA0B,qC,uBCoF1BA,MA/Ef,WAKE,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,gBACA,qBAAKA,UAAU,SAASC,QARZ,WAChBC,MAAM,oDAOF,8BAIF,yBAAQF,UAAU,UAAlB,UACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,gBAAf,kBACO,uBADP,4BAIA,6JAIA,sEAGF,qBAAKA,UAAU,iBAAf,SACE,cAAC,IAAD,CACEG,OAAO,qBACPC,QAAQ,qBACRC,MAAM,OACNC,OAAO,cAIb,sBAEA,sBAAKN,UAAU,YAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,gBAAgBO,IAAKC,EAAKC,IAAI,UAE/C,sBAAKT,UAAU,iBAAf,UACE,mDACA,kEACoC,IAClC,mBAAGU,KAAK,4BAAR,yBAFF,6EAOJ,qBAAKV,UAAU,YACf,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,0CACA,oFACqD,uBADrD,SAEE,iDAFF,2BAEoD,uBAFpD,SAGE,2DAHF,0BAG6D,uBAH7D,wEAME,uBANF,yFASE,uBATF,2GAcF,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,eAAeO,IAAKI,EAASF,IAAI,gBAItD,qBAAKT,UAAU,eCnENY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5e0e3b23.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/halPic.1307f948.PNG\";","export default __webpack_public_path__ + \"static/media/controls.d2185465.PNG\";","import \"./App.css\";\nimport pic from \"./halPic.PNG\";\nimport control from \"./controls.PNG\";\nimport WidgetBot from \"@widgetbot/react-embed\";\n\nfunction App() {\n  var handleClick = () => {\n    alert(\"Unable to generate invite: SERVER LIMIT REACHED\");\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"nav\">\n        <div className=\"nav-logo\">IH</div>\n        <div className=\"button\" onClick={handleClick}>\n          Add To Server\n        </div>\n      </div>\n      <header className=\"content\">\n        <div className=\"landing\">\n          <div className=\"landing-text\">\n            <div className=\"landing-title\">\n              Hal, <br /> Music Bot for Discord\n            </div>\n\n            <p>\n              Play music directly into discord calls. Create and store your own\n              playlists now with minimal downtime. Login to try the bot.\n            </p>\n            <h4>Currently Limited To 100 Servers.</h4>\n          </div>\n\n          <div className=\"landing-widget\">\n            <WidgetBot\n              server=\"529063110708035584\"\n              channel=\"782445584006643723\"\n              width=\"100%\"\n              height=\"100%\"\n            />\n          </div>\n        </div>\n        <p>{/* <code>Try the bot here.</code> */}</p>\n\n        <div className=\"over-view\">\n          <div className=\"over-view-wrapper\">\n            <img className=\"over-view-pic\" src={pic} alt=\"bot\" />\n          </div>\n          <div className=\"over-view-text\">\n            <h2>Hal can do a lot.</h2>\n            <p>\n              The bot is built in Node Js using{\" \"}\n              <a href=\"https://discord.js.org/#/\"> Discord Js</a>. It plugs into\n              a MongoDB database to manage and store playlists.\n            </p>\n          </div>\n        </div>\n        <div className=\"spliter\"></div>\n        <div className=\"controls\">\n          <div className=\"controls-text\">\n            <h2>Controls</h2>\n            <p>\n              > Must have a text channed named [ bot-commands ]. <br />> Type\n              <code> join / leave</code> to add to voice calls. <br />> Type\n              <code> create / delete [Name]</code> to control playlists. <br />\n              > The buttons below the playlist tab play the corresponding\n              playlist.\n              <br />\n              > The buttons below queue are: skip song, shuffle playlist, remove\n              song from playlist.\n              <br />> Typing anything creates a search, The buttons will add the\n              selected song to the current playlist\n            </p>\n          </div>\n\n          <div className=\"controls-wrapper\">\n            <img className=\"controls-pic\" src={control} alt=\"bot\" />\n          </div>\n        </div>\n      </header>\n      <div className=\"footer\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}